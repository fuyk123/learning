<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!-- 一个数据库一个context -->
    <context id="mysqlTables">
        <!-->对生成的Example类重命名为Query的插件，而且必须放第一个，这个xml对顺序还是有要求的<-->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Query"/>
        </plugin>
        <!-- 注释 -->
        <commentGenerator>
            <property name="addRemarkComments" value="true"/> <!--增加数据库备注-->
            <property name="suppressAllComments" value="true" /> <!--是否取消注释 -->
            <property name="suppressDate" value="false"/> <!--是否生成注释代时间戳 -->
        </commentGenerator>

        <!-- 数据库链接URL、用户名、密码 ,这里我用mysql8.0,驱动类完整路径变了，jdbc连接配置也很有讲究-->
        <!-- 连接字符串 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Asia/Shanghai&amp;characterEncoding=utf8&amp;useSSL=false"
                        userId="root"
                        password="123456">
            <!-->不加nullCatalogMeansCurrent,会把session连接下所有数据库都扫描，很坑；配了只扫描当前数据库<-->
            <property name="nullCatalogMeansCurrent" value="true" />
        </jdbcConnection>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL
                和 NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
            也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下 -->
        <javaModelGenerator targetPackage="com.fuyk.demo.sqlservice.domain" targetProject="src/main/java">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.github.jackieonwaymodel.[schemaName] -->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true" />
            <!-- 是否生成构造函数 默认是false -->
            <property name="constructorBased" value="false"/>
        </javaModelGenerator>

        <!--对应的mapper.xml文件 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false" />
            <property name="constructorBased" value="false"/>
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.fuyk.demo.sqlservice.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="false" />
            <property name="constructorBased" value="false"/>
        </javaClientGenerator>
        <!-->默认生成Example类，不要的话设成false把注释掉<-->
        <table  tableName="user"  domainObjectName="User" mapperName="UserMapper">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <columnOverride column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
        </table>

    </context>
</generatorConfiguration>